apiVersion: v1
kind: ConfigMap
metadata:
  name: node-app-config
data:
  APP_ENV: production
  APP_DEBUG: "false"
  APP_PORT: "5000"
  MONGO_URL: "mongodb://mongo:27017/database"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app # This label must match the Service selector
  template:
    metadata:
      labels:
        app: node-app # This is the label that the Service will look for
    spec:
      containers:
        - name: node-app
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          image: shadialmancy/web_application:v10 # Replace with your Docker image
          ports:
            - containerPort: 5000
          volumeMounts:
            - mountPath: /data
              name: node-app-storage
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: node-app-storage
          persistentVolumeClaim:
            claimName: node-app-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: node-app
spec:
  type: NodePort # Use NodePort to access from outside the cluster
  ports:
    - port: 5000 # Port that the service will expose
      targetPort: 5000 # Port on the container
      nodePort: 30000 # Optional: Specify a port for NodePort
  selector:
    app: node-app # This must match the Pod's label
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-host
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /app/backend
# spec:
#   rules:
#   - host: foo.bar.com
#     http:
#       paths:
#       - pathType: Prefix
#         path: /app/backend
#         backend:
#           service:
#             name: node-app
#             port:
#               number: 5000
